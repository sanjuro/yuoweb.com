<?php

/**
 * BaseHeadspacePostTag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $post_id
 * @property integer $tag_id
 * @property HeadspacePost $HeadspacePost
 * @property HeadspaceTag $HeadspaceTag
 * 
 * @method integer          getId()            Returns the current record's "id" value
 * @method integer          getPostId()        Returns the current record's "post_id" value
 * @method integer          getTagId()         Returns the current record's "tag_id" value
 * @method HeadspacePost    getHeadspacePost() Returns the current record's "HeadspacePost" value
 * @method HeadspaceTag     getHeadspaceTag()  Returns the current record's "HeadspaceTag" value
 * @method HeadspacePostTag setId()            Sets the current record's "id" value
 * @method HeadspacePostTag setPostId()        Sets the current record's "post_id" value
 * @method HeadspacePostTag setTagId()         Sets the current record's "tag_id" value
 * @method HeadspacePostTag setHeadspacePost() Sets the current record's "HeadspacePost" value
 * @method HeadspacePostTag setHeadspaceTag()  Sets the current record's "HeadspaceTag" value
 * 
 * @package    Yuoweb
 * @subpackage model
 * @author     Shadley Wentzel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHeadspacePostTag extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('headspace_post_tag');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('post_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('tag_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('HeadspacePost', array(
             'local' => 'post_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('HeadspaceTag', array(
             'local' => 'tag_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $countcache0 = new CountCache(array(
             'relations' => 
             array(
              'HeadspaceTag' => 
              array(
              'columnName' => 'count',
              'foreignAlias' => 'HeadspacePostTag',
              ),
             ),
             ));
        $this->actAs($countcache0);
    }
}