<?php

/**
 * BaseEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $networkuser_id
 * @property integer $network_id
 * @property integer $eventtype_id
 * @property string $title
 * @property string $description
 * @property integer $accept_count
 * @property integer $accept_limit
 * @property string $address
 * @property integer $g_lat
 * @property integer $g_long
 * @property string $contact_no
 * @property timestamp $start_at
 * @property timestamp $end_at
 * @property boolean $is_private
 * @property Network $Network
 * @property NetworkUser $NetworkUser
 * @property Doctrine_Collection $EventInvite
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method integer             getNetworkuserId()  Returns the current record's "networkuser_id" value
 * @method integer             getNetworkId()      Returns the current record's "network_id" value
 * @method integer             getEventtypeId()    Returns the current record's "eventtype_id" value
 * @method string              getTitle()          Returns the current record's "title" value
 * @method string              getDescription()    Returns the current record's "description" value
 * @method integer             getAcceptCount()    Returns the current record's "accept_count" value
 * @method integer             getAcceptLimit()    Returns the current record's "accept_limit" value
 * @method string              getAddress()        Returns the current record's "address" value
 * @method integer             getGLat()           Returns the current record's "g_lat" value
 * @method integer             getGLong()          Returns the current record's "g_long" value
 * @method string              getContactNo()      Returns the current record's "contact_no" value
 * @method timestamp           getStartAt()        Returns the current record's "start_at" value
 * @method timestamp           getEndAt()          Returns the current record's "end_at" value
 * @method boolean             getIsPrivate()      Returns the current record's "is_private" value
 * @method Network             getNetwork()        Returns the current record's "Network" value
 * @method NetworkUser         getNetworkUser()    Returns the current record's "NetworkUser" value
 * @method Doctrine_Collection getEventInvite()    Returns the current record's "EventInvite" collection
 * @method Event               setId()             Sets the current record's "id" value
 * @method Event               setNetworkuserId()  Sets the current record's "networkuser_id" value
 * @method Event               setNetworkId()      Sets the current record's "network_id" value
 * @method Event               setEventtypeId()    Sets the current record's "eventtype_id" value
 * @method Event               setTitle()          Sets the current record's "title" value
 * @method Event               setDescription()    Sets the current record's "description" value
 * @method Event               setAcceptCount()    Sets the current record's "accept_count" value
 * @method Event               setAcceptLimit()    Sets the current record's "accept_limit" value
 * @method Event               setAddress()        Sets the current record's "address" value
 * @method Event               setGLat()           Sets the current record's "g_lat" value
 * @method Event               setGLong()          Sets the current record's "g_long" value
 * @method Event               setContactNo()      Sets the current record's "contact_no" value
 * @method Event               setStartAt()        Sets the current record's "start_at" value
 * @method Event               setEndAt()          Sets the current record's "end_at" value
 * @method Event               setIsPrivate()      Sets the current record's "is_private" value
 * @method Event               setNetwork()        Sets the current record's "Network" value
 * @method Event               setNetworkUser()    Sets the current record's "NetworkUser" value
 * @method Event               setEventInvite()    Sets the current record's "EventInvite" collection
 * 
 * @package    Yuoweb
 * @subpackage model
 * @author     Shadley Wentzel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEvent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('networkuser_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('network_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('eventtype_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('title', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('description', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('accept_count', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('accept_limit', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('address', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('g_lat', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('g_long', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('contact_no', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('start_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('end_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('is_private', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Network', array(
             'local' => 'network_id',
             'foreign' => 'id'));

        $this->hasOne('NetworkUser', array(
             'local' => 'networkuser_id',
             'foreign' => 'id'));

        $this->hasMany('EventInvite', array(
             'local' => 'id',
             'foreign' => 'event_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $searchable0 = new Doctrine_Template_Searchable(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'description',
             ),
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'title',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($searchable0);
        $this->actAs($softdelete0);
        $this->actAs($sluggable0);
    }
}