<?php

/**
 * BaseWebuySupplier
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $fullname
 * @property integer $product_count
 * @property string $contact_number
 * @property string $address
 * @property integer $g_lat
 * @property integer $g_long
 * @property string $logo
 * @property string $url
 * @property string $email
 * @property Doctrine_Collection $WebuyProduct
 * 
 * @method string              getFullname()       Returns the current record's "fullname" value
 * @method integer             getProductCount()   Returns the current record's "product_count" value
 * @method string              getContactNumber()  Returns the current record's "contact_number" value
 * @method string              getAddress()        Returns the current record's "address" value
 * @method integer             getGLat()           Returns the current record's "g_lat" value
 * @method integer             getGLong()          Returns the current record's "g_long" value
 * @method string              getLogo()           Returns the current record's "logo" value
 * @method string              getUrl()            Returns the current record's "url" value
 * @method string              getEmail()          Returns the current record's "email" value
 * @method Doctrine_Collection getWebuyProduct()   Returns the current record's "WebuyProduct" collection
 * @method WebuySupplier       setFullname()       Sets the current record's "fullname" value
 * @method WebuySupplier       setProductCount()   Sets the current record's "product_count" value
 * @method WebuySupplier       setContactNumber()  Sets the current record's "contact_number" value
 * @method WebuySupplier       setAddress()        Sets the current record's "address" value
 * @method WebuySupplier       setGLat()           Sets the current record's "g_lat" value
 * @method WebuySupplier       setGLong()          Sets the current record's "g_long" value
 * @method WebuySupplier       setLogo()           Sets the current record's "logo" value
 * @method WebuySupplier       setUrl()            Sets the current record's "url" value
 * @method WebuySupplier       setEmail()          Sets the current record's "email" value
 * @method WebuySupplier       setWebuyProduct()   Sets the current record's "WebuyProduct" collection
 * 
 * @package    Spark
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWebuySupplier extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('webuy_supplier');
        $this->hasColumn('fullname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('product_count', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('contact_number', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('g_lat', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('g_long', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('logo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('WebuyProduct', array(
             'local' => 'id',
             'foreign' => 'supplier_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'fullname',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}