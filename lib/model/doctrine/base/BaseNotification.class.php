<?php

/**
 * BaseNotification
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $network_id
 * @property integer $user_id
 * @property string $description
 * @property integer $notificationtype_id
 * @property timestamp $lasttime_read
 * @property Network $Network
 * @property sfGuardUser $sfGuardUser
 * @property NotificationType $NotificationType
 * 
 * @method integer          getId()                  Returns the current record's "id" value
 * @method integer          getNetworkId()           Returns the current record's "network_id" value
 * @method integer          getUserId()              Returns the current record's "user_id" value
 * @method string           getDescription()         Returns the current record's "description" value
 * @method integer          getNotificationtypeId()  Returns the current record's "notificationtype_id" value
 * @method timestamp        getLasttimeRead()        Returns the current record's "lasttime_read" value
 * @method Network          getNetwork()             Returns the current record's "Network" value
 * @method sfGuardUser      getSfGuardUser()         Returns the current record's "sfGuardUser" value
 * @method NotificationType getNotificationType()    Returns the current record's "NotificationType" value
 * @method Notification     setId()                  Sets the current record's "id" value
 * @method Notification     setNetworkId()           Sets the current record's "network_id" value
 * @method Notification     setUserId()              Sets the current record's "user_id" value
 * @method Notification     setDescription()         Sets the current record's "description" value
 * @method Notification     setNotificationtypeId()  Sets the current record's "notificationtype_id" value
 * @method Notification     setLasttimeRead()        Sets the current record's "lasttime_read" value
 * @method Notification     setNetwork()             Sets the current record's "Network" value
 * @method Notification     setSfGuardUser()         Sets the current record's "sfGuardUser" value
 * @method Notification     setNotificationType()    Sets the current record's "NotificationType" value
 * 
 * @package    Yuoweb
 * @subpackage model
 * @author     Shadley Wentzel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNotification extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('notification');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('network_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('notificationtype_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('lasttime_read', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Network', array(
             'local' => 'network_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('NotificationType', array(
             'local' => 'notificationtype_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $searchable0 = new Doctrine_Template_Searchable(array(
             'fields' => 
             array(
              0 => 'user_id',
              1 => 'notificationtype_id',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($searchable0);
    }
}