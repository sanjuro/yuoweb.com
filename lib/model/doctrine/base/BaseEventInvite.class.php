<?php

/**
 * BaseEventInvite
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $event_id
 * @property integer $networkuser_id
 * @property Event $Event
 * @property NetworkUser $NetworkUser
 * 
 * @method integer     getId()             Returns the current record's "id" value
 * @method integer     getEventId()        Returns the current record's "event_id" value
 * @method integer     getNetworkuserId()  Returns the current record's "networkuser_id" value
 * @method Event       getEvent()          Returns the current record's "Event" value
 * @method NetworkUser getNetworkUser()    Returns the current record's "NetworkUser" value
 * @method EventInvite setId()             Sets the current record's "id" value
 * @method EventInvite setEventId()        Sets the current record's "event_id" value
 * @method EventInvite setNetworkuserId()  Sets the current record's "networkuser_id" value
 * @method EventInvite setEvent()          Sets the current record's "Event" value
 * @method EventInvite setNetworkUser()    Sets the current record's "NetworkUser" value
 * 
 * @package    Yuoweb
 * @subpackage model
 * @author     Shadley Wentzel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEventInvite extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event_invite');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('event_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('networkuser_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id'));

        $this->hasOne('NetworkUser', array(
             'local' => 'networkuser_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}