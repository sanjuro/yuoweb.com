<?php

/**
 * BaseMessageReciever
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $message_id
 * @property integer $networkuser_id
 * @property integer $messagestatus_id
 * @property NetworkUser $NetworkUser
 * @property Message $Message
 * @property MessageStatus $MessageStatus
 * 
 * @method integer         getId()               Returns the current record's "id" value
 * @method integer         getMessageId()        Returns the current record's "message_id" value
 * @method integer         getNetworkuserId()    Returns the current record's "networkuser_id" value
 * @method integer         getMessagestatusId()  Returns the current record's "messagestatus_id" value
 * @method NetworkUser     getNetworkUser()      Returns the current record's "NetworkUser" value
 * @method Message         getMessage()          Returns the current record's "Message" value
 * @method MessageStatus   getMessageStatus()    Returns the current record's "MessageStatus" value
 * @method MessageReciever setId()               Sets the current record's "id" value
 * @method MessageReciever setMessageId()        Sets the current record's "message_id" value
 * @method MessageReciever setNetworkuserId()    Sets the current record's "networkuser_id" value
 * @method MessageReciever setMessagestatusId()  Sets the current record's "messagestatus_id" value
 * @method MessageReciever setNetworkUser()      Sets the current record's "NetworkUser" value
 * @method MessageReciever setMessage()          Sets the current record's "Message" value
 * @method MessageReciever setMessageStatus()    Sets the current record's "MessageStatus" value
 * 
 * @package    Spark
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMessageReciever extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('message_reciever');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('message_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('networkuser_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('messagestatus_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('NetworkUser', array(
             'local' => 'networkuser_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Message', array(
             'local' => 'message_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('MessageStatus', array(
             'local' => 'messagestatus_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}