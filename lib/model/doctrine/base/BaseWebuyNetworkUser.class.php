<?php

/**
 * BaseWebuyNetworkUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $networkuser_id
 * @property integer $deal_id
 * @property WebuyDeal $WebuyDeal
 * @property NetworkUser $NetworkUser
 * 
 * @method integer          getId()             Returns the current record's "id" value
 * @method integer          getNetworkuserId()  Returns the current record's "networkuser_id" value
 * @method integer          getDealId()         Returns the current record's "deal_id" value
 * @method WebuyDeal        getWebuyDeal()      Returns the current record's "WebuyDeal" value
 * @method NetworkUser      getNetworkUser()    Returns the current record's "NetworkUser" value
 * @method WebuyNetworkUser setId()             Sets the current record's "id" value
 * @method WebuyNetworkUser setNetworkuserId()  Sets the current record's "networkuser_id" value
 * @method WebuyNetworkUser setDealId()         Sets the current record's "deal_id" value
 * @method WebuyNetworkUser setWebuyDeal()      Sets the current record's "WebuyDeal" value
 * @method WebuyNetworkUser setNetworkUser()    Sets the current record's "NetworkUser" value
 * 
 * @package    Spark
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWebuyNetworkUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('webuy_network_user');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('networkuser_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('deal_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('WebuyDeal', array(
             'local' => 'deal_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('NetworkUser', array(
             'local' => 'networkuser_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $countcache0 = new CountCache(array(
             'relations' => 
             array(
              'WebuyDeal' => 
              array(
              'columnName' => 'buyer_count',
              'foreignAlias' => 'WebuyNetworkUser',
              ),
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($countcache0);
    }
}