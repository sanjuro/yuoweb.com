<?php

/**
 * BaseClient
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $fullname
 * @property string $logo
 * @property string $url
 * @property string $email
 * @property string $description
 * @property string $token
 * @property boolean $is_activated
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $Networks
 * 
 * @method integer             getUserId()       Returns the current record's "user_id" value
 * @method string              getFullname()     Returns the current record's "fullname" value
 * @method string              getLogo()         Returns the current record's "logo" value
 * @method string              getUrl()          Returns the current record's "url" value
 * @method string              getEmail()        Returns the current record's "email" value
 * @method string              getDescription()  Returns the current record's "description" value
 * @method string              getToken()        Returns the current record's "token" value
 * @method boolean             getIsActivated()  Returns the current record's "is_activated" value
 * @method sfGuardUser         getSfGuardUser()  Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getNetworks()     Returns the current record's "Networks" collection
 * @method Client              setUserId()       Sets the current record's "user_id" value
 * @method Client              setFullname()     Sets the current record's "fullname" value
 * @method Client              setLogo()         Sets the current record's "logo" value
 * @method Client              setUrl()          Sets the current record's "url" value
 * @method Client              setEmail()        Sets the current record's "email" value
 * @method Client              setDescription()  Sets the current record's "description" value
 * @method Client              setToken()        Sets the current record's "token" value
 * @method Client              setIsActivated()  Sets the current record's "is_activated" value
 * @method Client              setSfGuardUser()  Sets the current record's "sfGuardUser" value
 * @method Client              setNetworks()     Sets the current record's "Networks" collection
 * 
 * @package    Spark
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClient extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('client');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('fullname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('logo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_activated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('Network as Networks', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}