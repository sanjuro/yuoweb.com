<?php

/**
 * BaseFeature
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $description
 * @property string $url
 * @property Doctrine_Collection $NetworkFeature
 * @property Doctrine_Collection $PhotoView
 * 
 * @method string              getTitle()          Returns the current record's "title" value
 * @method string              getDescription()    Returns the current record's "description" value
 * @method string              getUrl()            Returns the current record's "url" value
 * @method Doctrine_Collection getNetworkFeature() Returns the current record's "NetworkFeature" collection
 * @method Doctrine_Collection getPhotoView()      Returns the current record's "PhotoView" collection
 * @method Feature             setTitle()          Sets the current record's "title" value
 * @method Feature             setDescription()    Sets the current record's "description" value
 * @method Feature             setUrl()            Sets the current record's "url" value
 * @method Feature             setNetworkFeature() Sets the current record's "NetworkFeature" collection
 * @method Feature             setPhotoView()      Sets the current record's "PhotoView" collection
 * 
 * @package    Spark
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFeature extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('feature');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('url', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('NetworkFeature', array(
             'local' => 'id',
             'foreign' => 'feature_id'));

        $this->hasMany('PhotoView', array(
             'local' => 'id',
             'foreign' => 'photo_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}