<?php

/**
 * BaseShoutMessage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $networkuser_id
 * @property integer $shoutclient_id
 * @property string $mobile_number
 * @property string $message
 * @property integer $status
 * @property NetworkUser $NetworkUser
 * @property ShoutClient $ShoutClient
 * 
 * @method integer      getId()             Returns the current record's "id" value
 * @method integer      getNetworkuserId()  Returns the current record's "networkuser_id" value
 * @method integer      getShoutclientId()  Returns the current record's "shoutclient_id" value
 * @method string       getMobileNumber()   Returns the current record's "mobile_number" value
 * @method string       getMessage()        Returns the current record's "message" value
 * @method integer      getStatus()         Returns the current record's "status" value
 * @method NetworkUser  getNetworkUser()    Returns the current record's "NetworkUser" value
 * @method ShoutClient  getShoutClient()    Returns the current record's "ShoutClient" value
 * @method ShoutMessage setId()             Sets the current record's "id" value
 * @method ShoutMessage setNetworkuserId()  Sets the current record's "networkuser_id" value
 * @method ShoutMessage setShoutclientId()  Sets the current record's "shoutclient_id" value
 * @method ShoutMessage setMobileNumber()   Sets the current record's "mobile_number" value
 * @method ShoutMessage setMessage()        Sets the current record's "message" value
 * @method ShoutMessage setStatus()         Sets the current record's "status" value
 * @method ShoutMessage setNetworkUser()    Sets the current record's "NetworkUser" value
 * @method ShoutMessage setShoutClient()    Sets the current record's "ShoutClient" value
 * 
 * @package    Yuoweb
 * @subpackage model
 * @author     Shadley Wentzel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShoutMessage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('shout_message');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('networkuser_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('shoutclient_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('mobile_number', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('message', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('status', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('NetworkUser', array(
             'local' => 'networkuser_id',
             'foreign' => 'id'));

        $this->hasOne('ShoutClient', array(
             'local' => 'shoutclient_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $searchable0 = new Doctrine_Template_Searchable(array(
             'fields' => 
             array(
              0 => 'mobile_number',
              1 => 'networkuser_id',
             ),
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $countcache0 = new CountCache(array(
             'relations' => 
             array(
              'ShoutClient' => 
              array(
              'columnName' => 'message_count',
              'foreignAlias' => 'ShoutMessage',
              ),
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($searchable0);
        $this->actAs($softdelete0);
        $this->actAs($countcache0);
    }
}