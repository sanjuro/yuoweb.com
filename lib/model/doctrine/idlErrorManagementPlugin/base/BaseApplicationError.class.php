<?php

/**
 * BaseApplicationError
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $message
 * @property string $type
 * @property string $file
 * @property integer $line
 * @property clob $trace
 * @property integer $code
 * @property string $module
 * @property string $action
 * @property string $uri
 * @property string $user
 * @property clob $comment
 * @property enum $severity
 * @property string $user_agent
 * 
 * @method string           getMessage()    Returns the current record's "message" value
 * @method string           getType()       Returns the current record's "type" value
 * @method string           getFile()       Returns the current record's "file" value
 * @method integer          getLine()       Returns the current record's "line" value
 * @method clob             getTrace()      Returns the current record's "trace" value
 * @method integer          getCode()       Returns the current record's "code" value
 * @method string           getModule()     Returns the current record's "module" value
 * @method string           getAction()     Returns the current record's "action" value
 * @method string           getUri()        Returns the current record's "uri" value
 * @method string           getUser()       Returns the current record's "user" value
 * @method clob             getComment()    Returns the current record's "comment" value
 * @method enum             getSeverity()   Returns the current record's "severity" value
 * @method string           getUserAgent()  Returns the current record's "user_agent" value
 * @method ApplicationError setMessage()    Sets the current record's "message" value
 * @method ApplicationError setType()       Sets the current record's "type" value
 * @method ApplicationError setFile()       Sets the current record's "file" value
 * @method ApplicationError setLine()       Sets the current record's "line" value
 * @method ApplicationError setTrace()      Sets the current record's "trace" value
 * @method ApplicationError setCode()       Sets the current record's "code" value
 * @method ApplicationError setModule()     Sets the current record's "module" value
 * @method ApplicationError setAction()     Sets the current record's "action" value
 * @method ApplicationError setUri()        Sets the current record's "uri" value
 * @method ApplicationError setUser()       Sets the current record's "user" value
 * @method ApplicationError setComment()    Sets the current record's "comment" value
 * @method ApplicationError setSeverity()   Sets the current record's "severity" value
 * @method ApplicationError setUserAgent()  Sets the current record's "user_agent" value
 * 
 * @package    Spark
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseApplicationError extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('application_error');
        $this->hasColumn('message', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('type', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('file', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('line', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('trace', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('code', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('module', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('action', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('uri', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('user', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('comment', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('severity', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'low',
              1 => 'medium',
              2 => 'high',
              3 => 'critical',
             ),
             'default' => 'medium',
             ));
        $this->hasColumn('user_agent', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}